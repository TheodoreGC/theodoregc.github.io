<div class="theme-toggle">
  <label class="theme-toggle-light">
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20"viewBox="0 0 20 20" fill="currentColor">
      <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fillRule="evenodd" clipRule="evenodd"></path>
    </svg>
    <input type="radio" name="theme-toggle" value="light" title="Use light theme" aria-label="Use light theme">
  </label>
  <label class="theme-toggle-dark">
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
      <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
    </svg>
    <input type="radio" name="theme-toggle" value="dark" title="Use dark theme" aria-label="Use dark theme">
  </label>
</div>

<script>
  const event = new Event('theme-change');
  let theme = localStorage.getItem('theodore-garson-website-theme');

  if (!theme) {
    localStorage.setItem('theodore-garson-website-theme', window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
    theme = localStorage.getItem('theodore-garson-website-theme');
    event.detail = theme;
    document.documentElement.dispatchEvent(event);
  }

  if (theme === 'dark') {
    document.documentElement.classList.add('theme-dark');
    document.querySelector('.theme-toggle-dark').classList.add('checked');
    document.querySelector('.theme-toggle-light').classList.remove('checked');
  } else {
    document.querySelector('.theme-toggle-light').classList.add('checked');
    document.querySelector('.theme-toggle-dark').classList.remove('checked');
  }

  document.querySelector('.theme-toggle').addEventListener('click', ({ target: element }) => {
    if (element.tagName !== 'INPUT') return;

    const checkedElement = document.querySelector('.theme-toggle .checked');
    checkedElement?.classList.remove('checked');
    element.closest('label')?.classList.add('checked');

    if (element.closest('label')?.classList.contains('theme-toggle-dark')) {
      theme = localStorage.setItem('theodore-garson-website-theme', 'dark');
      document.documentElement.classList.add('theme-dark');
      event.detail = theme;
      document.documentElement.dispatchEvent(event);
    } else {
      theme = localStorage.setItem('theodore-garson-website-theme', 'light');
      document.documentElement.classList.remove('theme-dark');
      event.detail = theme;
      document.documentElement.dispatchEvent(event);
    }
  });
</script>

<style lang="scss">
  .theme-toggle {
    display: inline-flex;
    align-items: center;
    gap: 0.25em;
    padding: 0.33em 0.67em;
    border-radius: 99em;
    background-color: var(--theme-code-inline-bg);
  }

  .theme-toggle > label {
    color: var(--theme-code-inline-text);
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0.5;
    cursor: pointer;
  }

  input[name='theme-toggle'] {
    position: absolute;
    opacity: 0;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1;
  }

  .theme-toggle .checked {
    color: var(--theme-accent);
    opacity: 1;
  }
</style>
