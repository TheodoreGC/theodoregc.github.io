import './Post.svelte.css.proxy.js';
/* src/Post.svelte generated by Svelte v3.32.3 */
import {
	HtmlTag,
	SvelteComponent,
	action_destroyer,
	attr,
	detach,
	element,
	empty,
	handle_promise,
	init,
	insert,
	noop,
	safe_not_equal,
	text
} from "../_snowpack/pkg/svelte/internal.js";

import { useFocus } from "../_snowpack/pkg/svelte-navigator.js";
import { BlogService } from "./services/blog-service.js";

function create_catch_block(ctx) {
	let t_value = /*error*/ ctx[5] + "";
	let t;

	return {
		c() {
			t = text(t_value);
		},
		m(target, anchor) {
			insert(target, t, anchor);
		},
		p: noop,
		d(detaching) {
			if (detaching) detach(t);
		}
	};
}

// (34:2) {:then html}
function create_then_block(ctx) {
	let html_tag;
	let raw_value = /*html*/ ctx[4] + "";
	let html_anchor;

	return {
		c() {
			html_anchor = empty();
			html_tag = new HtmlTag(html_anchor);
		},
		m(target, anchor) {
			html_tag.m(raw_value, target, anchor);
			insert(target, html_anchor, anchor);
		},
		p: noop,
		d(detaching) {
			if (detaching) detach(html_anchor);
			if (detaching) html_tag.d();
		}
	};
}

// (32:26)      <h1 class="post-hidden" use:registerFocus>The blog post is being loaded...</h1>   {:then html}
function create_pending_block(ctx) {
	let h1;
	let registerFocus_action;
	let mounted;
	let dispose;

	return {
		c() {
			h1 = element("h1");
			h1.textContent = "The blog post is being loaded...";
			attr(h1, "class", "post-hidden svelte-11e7dcc");
		},
		m(target, anchor) {
			insert(target, h1, anchor);

			if (!mounted) {
				dispose = action_destroyer(registerFocus_action = /*registerFocus*/ ctx[0].call(null, h1));
				mounted = true;
			}
		},
		p: noop,
		d(detaching) {
			if (detaching) detach(h1);
			mounted = false;
			dispose();
		}
	};
}

function create_fragment(ctx) {
	let div;
	let promise;

	let info = {
		ctx,
		current: null,
		token: null,
		hasCatch: true,
		pending: create_pending_block,
		then: create_then_block,
		catch: create_catch_block,
		value: 4,
		error: 5
	};

	handle_promise(promise = /*blogPostRequest*/ ctx[1], info);

	return {
		c() {
			div = element("div");
			info.block.c();
			attr(div, "class", "post-page-wrapper svelte-11e7dcc");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			info.block.m(div, info.anchor = null);
			info.mount = () => div;
			info.anchor = null;
		},
		p(new_ctx, [dirty]) {
			ctx = new_ctx;

			{
				const child_ctx = ctx.slice();
				child_ctx[4] = child_ctx[5] = info.resolved;
				info.block.p(child_ctx, dirty);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div);
			info.block.d();
			info.token = null;
			info = null;
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	const registerFocus = useFocus();
	const blogService = new BlogService();
	let { id } = $$props;
	const blogPostRequest = blogService.getPost(id);

	$$self.$$set = $$props => {
		if ("id" in $$props) $$invalidate(2, id = $$props.id);
	};

	return [registerFocus, blogPostRequest, id];
}

class Post extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { id: 2 });
	}
}

export default Post;