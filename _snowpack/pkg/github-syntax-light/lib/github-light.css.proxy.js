// [snowpack] add styles to the page (skip if no document exists)
if (typeof document !== 'undefined') {
  const code = "/*!\n * GitHub Light v0.5.0\n * Copyright (c) 2012 - 2017 GitHub, Inc.\n * Licensed under MIT (https://github.com/primer/github-syntax-theme-generator/blob/master/LICENSE)\n */\n\n.pl-c /* comment, punctuation.definition.comment, string.comment */ {\n  color: #6a737d;\n}\n\n.pl-c1 /* constant, entity.name.constant, variable.other.constant, variable.language, support, meta.property-name, support.constant, support.variable, meta.module-reference, markup.raw, meta.diff.header, meta.output */,\n.pl-s .pl-v /* string variable */ {\n  color: #005cc5;\n}\n\n.pl-e /* entity */,\n.pl-en /* entity.name */ {\n  color: #6f42c1;\n}\n\n.pl-smi /* variable.parameter.function, storage.modifier.package, storage.modifier.import, storage.type.java, variable.other */,\n.pl-s .pl-s1 /* string source */ {\n  color: #24292e;\n}\n\n.pl-ent /* entity.name.tag, markup.quote */ {\n  color: #22863a;\n}\n\n.pl-k /* keyword, storage, storage.type */ {\n  color: #d73a49;\n}\n\n.pl-s /* string */,\n.pl-pds /* punctuation.definition.string, source.regexp, string.regexp.character-class */,\n.pl-s .pl-pse .pl-s1 /* string punctuation.section.embedded source */,\n.pl-sr /* string.regexp */,\n.pl-sr .pl-cce /* string.regexp constant.character.escape */,\n.pl-sr .pl-sre /* string.regexp source.ruby.embedded */,\n.pl-sr .pl-sra /* string.regexp string.regexp.arbitrary-repitition */ {\n  color: #032f62;\n}\n\n.pl-v /* variable */,\n.pl-smw /* sublimelinter.mark.warning */ {\n  color: #e36209;\n}\n\n.pl-bu /* invalid.broken, invalid.deprecated, invalid.unimplemented, message.error, brackethighlighter.unmatched, sublimelinter.mark.error */ {\n  color: #b31d28;\n}\n\n.pl-ii /* invalid.illegal */ {\n  color: #fafbfc;\n  background-color: #b31d28;\n}\n\n.pl-c2 /* carriage-return */ {\n  color: #fafbfc;\n  background-color: #d73a49;\n}\n\n.pl-c2::before /* carriage-return */ {\n  content: \"^M\";\n}\n\n.pl-sr .pl-cce /* string.regexp constant.character.escape */ {\n  font-weight: bold;\n  color: #22863a;\n}\n\n.pl-ml /* markup.list */ {\n  color: #735c0f;\n}\n\n.pl-mh /* markup.heading */,\n.pl-mh .pl-en /* markup.heading entity.name */,\n.pl-ms /* meta.separator */ {\n  font-weight: bold;\n  color: #005cc5;\n}\n\n.pl-mi /* markup.italic */ {\n  font-style: italic;\n  color: #24292e;\n}\n\n.pl-mb /* markup.bold */ {\n  font-weight: bold;\n  color: #24292e;\n}\n\n.pl-md /* markup.deleted, meta.diff.header.from-file, punctuation.definition.deleted */ {\n  color: #b31d28;\n  background-color: #ffeef0;\n}\n\n.pl-mi1 /* markup.inserted, meta.diff.header.to-file, punctuation.definition.inserted */ {\n  color: #22863a;\n  background-color: #f0fff4;\n}\n\n.pl-mc /* markup.changed, punctuation.definition.changed */ {\n  color: #e36209;\n  background-color: #ffebda;\n}\n\n.pl-mi2 /* markup.ignored, markup.untracked */ {\n  color: #f6f8fa;\n  background-color: #005cc5;\n}\n\n.pl-mdr /* meta.diff.range */ {\n  font-weight: bold;\n  color: #6f42c1;\n}\n\n.pl-ba /* brackethighlighter.tag, brackethighlighter.curly, brackethighlighter.round, brackethighlighter.square, brackethighlighter.angle, brackethighlighter.quote */ {\n  color: #586069;\n}\n\n.pl-sg /* sublimelinter.gutter-mark */ {\n  color: #959da5;\n}\n\n.pl-corl /* constant.other.reference.link, string.other.link */ {\n  text-decoration: underline;\n  color: #032f62;\n}\n\n";

  const styleEl = document.createElement("style");
  const codeEl = document.createTextNode(code);
  styleEl.type = 'text/css';
  styleEl.appendChild(codeEl);
  document.head.appendChild(styleEl);
}